language: cpp

matrix:
  fast_finish: true
  include:
    - os: linux
      compiler: clang
      sudo: required
      dist: trusty
      env: CXX_COMPILER=g++-8 C_COMPILER=gcc-8 BUILD_TYPE=Release

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - ninja-build
      - gcc-8
      - g++-8

before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y                ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  sudo apt update -qq                                                        ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  sudo apt install -y libasound2-dev                                         ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  sudo apt install -qq qt510base qt510multimedia qt510translations qt510tools; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  source /opt/qt510/bin/qt510-env.sh                                         ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  export QTHOME=/opt/qt510                                                   ; fi

  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install qt5; fi


install:
  # cmake on linux
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  curl -o cmake.tar.gz -O https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  mkdir /opt/cmake                                                                      ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  tar -xf cmake.tar.gz -C /opt/cmake --strip-components=1                               ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  rm -f cmake.tar.gz                                                                    ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  export PATH=/opt/cmake/bin:${PATH}                                                    ; fi

before_script:
  - mkdir build
  - cd build
  - cmake --version
  - ${CXX_COMPILER} --version
  - ${C_COMPILER} --version
  - cmake -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..

script:
  - cmake --build .
